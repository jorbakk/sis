.TH SIS 1 "1995, 2021, 2022, 2025"
.UC 4
.SH NAME
sis
.SH SYNOPSIS
.B sis
[
.I infile
] [
.I outfile
] [
.I options
]
.br
.SH DESCRIPTION
.I sis
stands for
.I single image stereogram.
It reads a given depth-map in tiff format as
the
.I infile
and generates a
.I SIS
in tiff format as the
.I outfile.
The format of the input file is detected automatically.
The 3D-effect is achieved by assigning two dots the same color
in the
.I SIS,
if they correspond to the same point
in the depth-map. Currently there are 4 algorithms for
generating the
.I SIS
available.
You can choose them with the
.I -a
option.
The first algorithm is the simplest, and (you guess it) the fastest.
The second algorithm additionally propagates pixels of the same color and
is a tiny bit slower. The third one does some additional checks for hidden
points in the depth-map. The fourth one is based on the original algorithm
from Andrew Steer.
.PP
.SM Options
.PP
.I #
stands for an integer.
Parameters can be seperated from the option by a space, or not.
.PP
The most important options are:
.TP 8
.I -x #
Width of the
.I SIS
in dots. Default is the width of the input picture. Ratios are kept
if one of height or width isn't forced.
.TP
.I -x #i#
Width of the
.I SIS
in tenths of inch with the resolution given in dots per inch.
.TP
.I -x #m#
Width of the
.I SIS
in tenths of cm with the resolution given in dots per inch.
.TP
.I -y #
Height of the
.I SIS
in dots. Default is the height of the input picture. Ratios are kept
if one of height or width isn't forced.
.TP
.I -y #i#
Height of the
.I SIS
in tenths of inch with the resolution given in dots per inch.
.TP
.I -y #m#
Height of the
.I SIS
in tenths of cm with the resolution given in dots per inch.
.TP
.I -e #
Distance of your eyes in dots.
.TP
.I -e #i#
Distance of your eyes in tenths of inch with the resolution in dots per
inch.
.TP
.I -e #m#
Distance of your eyes in tenths of cm with the resolution in dots per
inch.
.TP
.I -m
Add two triangles to the top of the
.I SIS
at a distance of the convergence strip width. This makes it much
easier to reveal the magic effect.
.TP
.I -t file
Use the tiff-picture
.I file
as a texture, instead of the default random black/white dots.
.TP
.I -a #
Use algorithm
.I #
for generating the
.I SIS.
Default is algorithm 4.
.PP
The more sophisticated options are:
.TP
.I -c #
Use random color dots for the
.I SIS
with
.I #
different colors. If
.I #
is omitted, the default value is 256.
.TP
.I -d #
Percentage of black dots in the
.I SIS
(density of black).
.TP
.I -f #
Distance of the far plane.
.I #
is the percentage of the distance between
your eyes and the
.I SIS.
.TP
.I -n #
Distance of the near plane.
.I #
is the percentage of the distance between
the
.I SIS
and the far plane.
.TP
.I -g #
Use random grey dots for the
.I SIS
with
.I #
different grey-scales. If
.I #
is omitted, the default value is 2.
.TP
.I -h
Print a help message and exit.
.TP
.I -i
Invert the depth-map.
.TP
.I -o #
Start the algorithm at
.I #
pixels from the left, i.e. determine the origin of the
algorithm. Default is the middle
of the picture except for algorithm 4, where it's a bit left
of the center.
.TP
.I -q
Oversampling factor. Currently only available for algorithm 4.
The default value is 4.
.TP
.I -s #
Start the random pixel-generation with seed value
.I #.
.TP
.I -v
Print some messages and statistics.

.SH AUTHORS
.PP
.I sis
was written by Joerg Bakker.
